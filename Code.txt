class Logo extends React.Component{
  constructor(props){
    super(props);
    this.state={};
  }
 
  toProfileNavigate = () => {
    ReactDOM.render(<Profile menu={[
    { name: 'Panner Masala', type: "veg", cost: 150 },
    { name: 'Dal', type: "veg", cost: 50 },
    { name: 'Gobi', type: "veg", cost: 70 },
    { name: 'Chicken Curry', type: "nonveg", cost: 90 },
    { name: 'Kadai Chicken', type: "nonveg", cost: 130 },
    { name: 'Sweet', cost: 30 }
    ]}/>,mountNode);
  }
  render(){
        return(<div className="logo">
        <button type="circle" className="logo-button"
          onClick={()=> this.toProfileNavigate()}>OFO</button><br/>
        <span>Order Food Online</span>
      </div>);
  }
}
 
var sum = 0;
 
class Profile extends React.Component{
  constructor(props){
    super(props);
    this.state={totalAmount: 0, type: "all", addedItems:[{name:"",count:0}],userDetails:{name:"",mail:"",mobile:""},errors:{name:"",mobile:"",mail:""}};
  }
 
  AddItem = (amount : int, item: string) => {
    sum = this.state.totalAmount+amount;
    let addedItems =this.state.addedItems;
    if(addedItems.length==1 && addedItems[0].count==0){
      addedItems=[{name:item,count:1}];
    }else{
      let isAdded:false;
      addedItems.forEach(x=>{
        if(x.name == item){
          x.count+=1;
          isAdded=true;
          return;
        }
        });
      if(!isAdded){
        addedItems.push({name:item,count:1});
      }
    }
       this.setState({totalAmount: sum, addedItems:addedItems});
  }
 
  RemoveItem = (amount : int, item: string) => {
    var tt = this.state.totalAmount;
    tt -= amount;
       let addedItems =this.state.addedItems;
    addedItems.forEach(x=>{
        if(x.name == item){
          x.count-=1;
         return;
        }
       });
    this.setState({totalAmount: tt, addedItems:addedItems,userDetails:null});
  }
 
  onTextBoxChange(property,value){
    let isSuccessfull : boolean = false;
    let errors= this.state.errors;
    console.log(property=="name")
    switch(property){
      case "name":
        if(!value.match(/^[a-zA-Z]+$/)){
          errors.name= "Only letters";
        }else{
          isSuccessfull = true;
          errors.name= "";
         };
       break;
      case "mail":
        let lastAtPos = value.lastIndexOf('@');
        let lastDotPos = value.lastIndexOf('.');
        if (!(lastAtPos < lastDotPos && lastAtPos > 0 && value.indexOf('@@') == -1 && lastDotPos > 2 && (value.length - lastDotPos) > 2)) {
            errors.mail = "Email is not valid";
          }else{
             isSuccessfull = true;
             errors.mail= "";
          };
        break;
      default:
          if(!value.match(/^[0-9]+$/)){
          errors.mobile= "Only numbers";
        }else{
          isSuccessfull = true;
          errors.mobile= "";
         };
       break;
        break;
    }
  let newState = this.state.userDetails;
  newState[property]= value;
  this.setState({userDetails:newState});
}
 
navigateNext = () => {
       ReactDOM.render(<Review userDetails={this.state.userDetails} selectedItem={this.state.addedItems}/>,mountNode);          
}
 
  render(){
    return(<div className="profile">
        <span className="admin-link">
          <a href="javascript: void(0)" onClick={()=> ReactDOM.render(<Admin/>,mountNode)}><u>Admin Site</u></a>
        </span><br/>
        <h3 className="text-center">Profile</h3><br/>
        <table align="center">
          <tr>
            <td>Name</td><td><input onBlur={(value)=>this.onTextBoxChange("name",value.target.value)}/>
             <span style={{color: "red"}}>{this.state.errors["name"]}</span></td>
            </tr><br/>
          <tr>
            <td>Mobile</td><td><input onBlur={(mobile)=>this.onTextBoxChange("mobile",mobile.target.value)}/>
            <span style={{color: "red"}}>{this.state.errors["mobile"]}</span></td>
            </tr><br/>
          <tr>
            <td>Gmail</td><td><input onBlur={(gmail)=>this.onTextBoxChange("mail",gmail.target.value)}/>
             <span style={{color: "red"}}>{this.state.errors["mail"]}</span></td>
            </tr>
          </table><br/>
        <h3 className="text-center">Menu</h3><br/>
        <div className="row">
          <div className="col-xs-12 col-sm-4">
        <button className="menu-button" onClick={() => this.setState({type: "all"})}>Show All</button>
            </div>
          <div className="col-xs-12 col-sm-4">
        <button className="veg-menu-button" onClick={() => this.setState({type: "veg"})}><span class="veg-dot"></span>&nbsp;Veg</button>
            </div>
          <div className="col-xs-12 col-sm-4">
        <button className="nonveg-menu-button" onClick={() => this.setState({type: "nonveg"})}><span class="nonveg-dot">
          </span>&nbsp;Non-Veg</button>
            </div>
          </div><br/>
            {this.props.menu.filter(x => this.state.type === 'all' || x.type === this.state.type).map(x =>
                                 <Itemlist list={x} onAddItem={() => this.AddItem(x.cost, x.name)}
                                   onRemoveItem={() => this.RemoveItem(x.cost,x.name)} itemCount={this.state.itemCount}
                                   addedItems={this.state.addedItems}/>)}
           <div className="row total">
               <div className="col-xs-12 col-sm-8">Total</div>
               <div className="col-xs-12 col-sm-4"> <span>{this.state.totalAmount}</span></div>
            </div>
           <button className="submit-button" onClick={()=>this.navigateNext()}>Submit</button>
          </div>
      );
  }
}
 
class Itemlist extends React.Component{
  constructor(props){
    super(props);
    this.state={};
  }
 
  static getDerivedStateFromProps(nextProps,prevState){
    let count=0;
    nextProps.addedItems.length>0 && nextProps.addedItems.forEach(x=>{
      if(x.name==nextProps.list.name && x.count>0){
      count=x.count;
      }
    });
    return{
      count:count,
    }
  }
 
  render(){
   
    return(
       <div className="row">
        <div className="col-xs-12 col-sm-9 row">
                 <div className="col-xs-12 col-sm-7">{this.props.list.name}</div>
                 <div className="col-xs-12 col-sm-5"><span>&#8377;</span>{this.props.list.cost}</div>
          </div>
      <div className="col-xs-12 col-sm-3">
                 <button className="add-remove-button" onClick={() => this.props.onAddItem(this.props.list.cost,
                                                                                                      this.props.list.name)}>+</button>
                 {this.state.count}
                 {this.state.count > 0?
                 <button className="add-remove-button" onClick={() => this.props.onRemoveItem(this.props.list.cost,
                                                                                             this.props.list.name)}>-</button>: null}
             </div>
         </div>
    );
  }
}
 
class Admin extends React.Component{
    constructor(props){
    super(props);
    this.state={};
   }
  render(){
    return(
    <div>Hi</div>
    );
  }
}
 
 
class Review extends React.Component{
     constructor(props){
    super(props);
    this.state={};
   }
     render(){
       console.log(this.props.userDetails);
       return(
       <div>
           Hi <b>{this.props.userDetails.name}</b>,<br/>
             Thanks for choosing OFO.
           <br/>
           Please review your order details:
           <br/>
           Phone:{this.props.userDetails.mobile}<br/>
           mail:{this.props.userDetails.mail}      <br/>
            <button className="add-remove-button" onClick={() =>   ReactDOM.render(<Profile menu={[
    { name: 'Panner Masala', type: "veg", cost: 150 },
    { name: 'Dal', type: "veg", cost: 50 },
    { name: 'Gobi', type: "veg", cost: 70 },
    { name: 'Chicken Curry', type: "nonveg", cost: 90 },
    { name: 'Kadai Chicken', type: "nonveg", cost: 130 },
    { name: 'Sweet', cost: 30 }
    ]} userDetails={this.props.userDetails}/>,mountNode)}>Add more</button>
           </div>
       );
     } 
}
ReactDOM.render(<Logo/>,mountNode);
 

